const t={analyserNodes:[],audioInfo:{},data:[],rAF:null,canvasWorker:null,settings:{fps:0,fft:11,minDB:-100,maxDB:-30,smooth:0,scale:1},framerate:0,lastTick:performance.now(),init:(i,e,s=t.settings)=>{let a,h;if(t.canvasWorker=e,t.settings={...t.settings,...s},i){i.tagName?(a=new AudioContext,i=a.createMediaElementSource(i)):a=i.context,h=a.createChannelSplitter(i.channelCount),i.connect(h),t.analyserNodes=[];for(let e=0,s=i.channelCount;e<s;e++)t.analyserNodes[e]=a.createAnalyser(),t.analyserNodes[e].fftSize=Math.pow(2,t.settings.fft),t.analyserNodes[e].minDecibels=t.settings.minDB,t.analyserNodes[e].maxDecibels=t.settings.maxDB,t.analyserNodes[e].smoothingTimeConstant=t.settings.smooth,h.connect(t.analyserNodes[e],e,0);return i.connect(a.destination),t.sendAudioInfo(a),t.setFPS(t.settings.fps),t}},loopRAF:()=>{t.rAF=requestAnimationFrame(t.loopRAF),t.loop()},loopTimer:()=>{t.getFramerate(),t.loop()},getFramerate:()=>{const i=performance.now();t.framerate=1e3/(i-t.lastTick),t.lastTick=i},loop:()=>{t.data={freq:[],time:[]};for(let i=0;i<t.analyserNodes.length;i++)t.data.time[i]=new Uint8Array(t.analyserNodes[i].fftSize),t.analyserNodes[i].getByteTimeDomainData(t.data.time[i]),t.data.freq[i]=new Uint8Array(t.analyserNodes[i].frequencyBinCount),t.analyserNodes[i].getByteFrequencyData(t.data.freq[i]);t.canvasWorker.postMessage({data:t.data})},sendAudioInfo:i=>{t.canvasWorker.postMessage({audioInfo:{fftSize:t.analyserNodes[0].fftSize,minDB:t.analyserNodes[0].minDecibels,maxDB:t.analyserNodes[0].maxDecibels,smooth:t.analyserNodes[0].smoothingTimeConstant,sampleRate:i?.sampleRate,channels:i?.destination.channelCount}})},setFPS:i=>{t.rAF&&(0===t.fps?cancelAnimationFrame(t.rAF):clearInterval(t.rAF),t.rAF=null),0===i?(t.rAF=requestAnimationFrame(t.loopRAF),t.framerate="MAX"):t.rAF=setInterval(t.loopTimer,1e3/i),t.fps=i}},i={canvasWorker:new Worker(URL.createObjectURL(new Blob(['\nclass Waveform{constructor(t,i=0,s=0,h=t.canvas.width,e=t.canvas.height){this.ctx=t,this.x=i,this.y=s,this.width=h,this.height=e,this.strokeBG="rgba(0, 100, 0, 255)",this.strokeFG="rgba(0, 255, 0, 255)"}clear(){const t=this.ctx;t.fillStyle="rgba(0, 0, 0, 255)",t.fillRect(this.x,this.y,this.width,this.height)}drawBG(){const t=this.ctx,i=this.width,s=this.height;t.lineWidth=1,t.strokeStyle=this.strokeBG;for(let h=0,e=this.channels;h<e;h++)t.beginPath(),t.setLineDash([15,15]),t.moveTo(this.x,this.y+(h+.5)*s/e),t.lineTo(this.x+i,this.y+(h+.5)*s/e),t.stroke(),t.beginPath(),t.lineWidth=2,t.setLineDash([]),t.moveTo(this.x,this.y+h*s/e),t.lineTo(this.x+i,this.y+h*s/e),t.stroke()}drawFG(t){const i=this.ctx,s=this.width;this.height;i.beginPath(),i.lineWidth=2,i.strokeStyle=this.strokeFG;const h=s/t.time[0].length;for(let s=0,e=t.time.length;s<e;s++){let e,a=this.y+(s+.5)*this.chHigh;i.moveTo(this.x,a);for(let n=0,l=t.time[s].length;n<l;n++)e=(t.time[s][n]-128)/128,a=this.y+(s+.5)*this.chHigh+e*this.ampHigh,i.lineTo(this.x+n*h,a)}i.stroke()}setAudio(t){t.channels&&(this.channels=t.channels,this.chHigh=this.height/t.channels,this.ampHigh=this.chHigh/2)}}function makeColorMap(t){const i=new OffscreenCanvas(256,1).getContext("2d",{alpha:!1,willReadFrequently:!0}),s=i.createLinearGradient(0,0,256,0),h=1/(t.length-1);let e=0;t.forEach((t=>{s.addColorStop(e,t),e+=h})),i.fillStyle=s,i.fillRect(0,0,256,1);let a=[];for(let t=0;t<256;t++)a[t]=n(t);return a;function n(t){const s=i.getImageData(t,0,1,1).data;return"rgb("+s[0]+","+s[1]+","+s[2]+")"}}class Spectrogram{constructor(t,i="LOG",s="A",h=0,e=0,a=t.canvas.width,n=t.canvas.height){this.ctx=t,this.x=h,this.y=e,this.width=a,this.height=n,this.colorMap=makeColorMap(["#000000","#0000a0","#6000a0","#962761","#dd1440","#f0b000","#ffffa0","#ffffff"]),this.tempCanvas=new OffscreenCanvas(this.width,this.height),this.tempCtx=this.tempCanvas.getContext("2d",{alpha:!1}),this.MODE=i,this.WEIGHTING=s,this.hCoeff=.2*this.height,this.bins=1024,this.nyquist=24e3,this.maxHearableBin=1023,this.lastData=[];const l=this.makeBinFreqs();this._aWeightingLUT=l.map((t=>.5+.5*this._getAWeighting(t)))}clear(){const t=this.ctx;t.fillStyle="rgb(0, 0, 0)",t.fillRect(this.x,this.y,this.width,this.height)}drawBG(){}drawFG(t){const i=this.ctx,s=this.width,h=this.hCoeff,e=(this.bins,t.freq),a=s/(this.maxHearableBin-1);if("LINEAR"===this.MODE)for(let t=0;t<=this.maxHearableBin;t++){let s=Math.max(e[0][t],e[1][t]);const n=this.colorMap[s],l=("A"===this.WEIGHTING?this._aWeightingLUT[t]/1.4:1)*s/256*h|0,o=t*a;i.fillStyle=n,i.fillRect(this.x+o,this.y+h-l,a,l),this.tempCtx.fillStyle=n,this.tempCtx.fillRect(o,0,a,2)}else if("LOG"===this.MODE){const t=Math.log(this.maxHearableBin);for(let a=0;a<=this.maxHearableBin;a++){const n=Math.log(a+1)/t*s|0,l=Math.log(a+2)/t*s-n|0,o=("A"===this.WEIGHTING?this._aWeightingLUT[a]/1.4:1)*e[a]/256*h|0,r=this.colorMap[Math.max(e[0][a],e[1][a],0)];i.fillStyle=r,i.fillRect(this.x+n,this.y+h-o,l,o),this.tempCtx.fillStyle=r,this.tempCtx.fillRect(n,0,l,2)}}else if("CONSTANT_Q"===this.MODE&&!dataHeap.every((t=>0===t))){this.lib._cqt_calc(this.dataPtr,this.dataPtr),this.lib._cqt_render_line(this.dataPtr);for(let t=0;t<canvasWidth;t++){const s=255*("A"===WEIGHTING?_aWeightingLUT[t]:1)*dataHeap[t]|0,e=s*h|0,a=getColor(s);i.fillStyle=a,i.fillRect(this.x+t,this.y+fqHeight-e,1,e),this.tempCtx.fillStyle=a,this.tempCtx.fillRect(t,0,1,2)}}this.tempCtx.translate(0,2),this.tempCtx.drawImage(this.tempCanvas,0,0),this.tempCtx.setTransform(1,0,0,1,0,0),i.drawImage(this.tempCanvas,this.x,this.y+h)}setAudio(t){this.bins=t.fftSize/2,t.channels&&(this.nyquist=t.sampleRate/2,this.channels=t.channels);const i=this.makeBinFreqs();this._aWeightingLUT=i.map((t=>.5+.5*this._getAWeighting(t)))}_getAWeighting(t){const i=t*t;return 281061254.916*i*i/((i+424.36)*Math.sqrt((i+11599.29)*(i+544496.41))*(i+14884e4))}isRepeatedFrequencyData(t){let i=!0;for(let s=0;s<this.bins;s+=16)t[s]!==this.lastData[s]&&(i=!1),this.lastData[s]=t[s];return i}cqt_bin_to_freq(t,i,s){const h=Math.log(i),e=Math.log(s);return Math.exp(h+(t+.5)*(e-h)*(1/width))}makeBinFreqs(){const t=[];for(let i=0;i<this.bins;i++)t[i]=i/this.bins*this.nyquist,t[i]<2e4&&(this.maxHearableBin=i);return t}}class Goniometer{constructor(t,i,s,h,e){this.ctx=t,this.x=i||0,this.y=s||0,this.width=h||t.canvas.width,this.height=e||t.canvas.height,this.strokeBG="rgba(208, 130, 34, 255)",this.strokeFG="rgba(230, 200, 32, 255)"}clear(){const t=this.ctx;t.fillStyle="rgba(0, 0, 0, 1)",t.fillRect(this.x,this.y,this.width,this.height)}drawBG(){const t=this.ctx,i=this.width,s=this.height;t.lineWidth=1,t.strokeStyle=this.strokeBG,t.beginPath(),t.moveTo(this.x,this.y+s/2),t.lineTo(this.x+i,this.y+s/2),t.moveTo(this.x+i/2,this.y+0),t.lineTo(this.x+i/2,this.y+s),t.moveTo(this.x+0,this.y+0),t.lineTo(this.x+i,this.y+s),t.moveTo(this.x+i,this.y+0),t.lineTo(this.x+0,this.y+s),t.moveTo(this.x+i/2+i/2/2,this.y+s/2),t.ellipse(this.x+i/2,this.y+s/2,i/2/2,s/2/2,0,0,2*Math.PI),t.moveTo(this.x+i/2+i/2/(4/3),this.y+s/2),t.ellipse(this.x+i/2,this.y+s/2,i/2/(4/3),s/2/(4/3),0,0,2*Math.PI),t.moveTo(this.x+i/2+i/2,this.y+s/2),t.ellipse(this.x+i/2,this.y+s/2,i/2,s/2,0,0,2*Math.PI),t.stroke()}drawFG(t){const i=this.ctx,s=this.width,h=this.height,e=t.time[0],a=t.time[1];let n;i.lineWidth=1,i.strokeStyle=this.strokeFG,i.beginPath(),n=this.rotate45deg(this.toFloat(a[0]),this.toFloat(e[0])),i.moveTo(this.x+n.x*s+s/2,this.y+n.y*h+h/2);for(let t=1;t<e.length;t++)n=this.rotate45deg(this.toFloat(a[t]),this.toFloat(e[t])),i.lineTo(this.x+n.x*s+s/2,this.y+n.y*h+h/2);i.stroke()}setAudio(){}toFloat(t){return(t-128)/256/1.414213}rotate45deg(t,i){const s=this.cartesian2polar(t,i);s.angle-=.78539816;const h=this.polar2cartesian(s.radius,s.angle);return{x:h.x,y:h.y}}cartesian2polar(t,i){return{radius:Math.sqrt(t*t+i*i),angle:Math.atan2(i,t)}}polar2cartesian(t,i){return{x:t*Math.sin(i),y:t*Math.cos(i)}}}let viz=[];onmessage=function(t){if(t.data.data)for(let i=0;i<viz.length;i++)viz[i].clear(),viz[i].drawFG(t.data.data);else{if(t.data.canvas){const i=t.data.canvas.getContext("2d");return viz.push(new Goniometer(i,0,0,i.canvas.width/2,i.canvas.width/2)),viz.push(new Spectrogram(i,"LINEAR","A",i.canvas.width/2,0,i.canvas.width/2,i.canvas.width/2)),void viz.push(new Waveform(i,0,i.canvas.width/2,i.canvas.width,i.canvas.height-i.canvas.width/2))}if(t.data.audioInfo)for(let i=0;i<viz.length;i++)viz[i].setAudio(t.data.audioInfo);else console.error("Unknown message:",t.data)}};\n'],{type:"text/javascript"})),{type:"module"}),audioSource:null,analyzer:null,settings:{fps:0,fft:11,minDB:-100,maxDB:-30,smooth:0,scale:1},init:(e,s,a=i.settings)=>{i.audioSource=e,i.settings={...i.settings,...a};try{s.width=screen.width*i.settings.scale,s.height=screen.height*i.settings.scale;const e=s.transferControlToOffscreen();i.canvasWorker.postMessage({canvas:e},[e]),i.analyzer=t.init(i.audioSource,i.canvasWorker,i.settings)}catch(e){i.analyzer=t.init(i.audioSource,i.canvasWorker)}return i}};export{i as visualizer};